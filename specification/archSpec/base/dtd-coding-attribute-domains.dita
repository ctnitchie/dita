<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="attdomain" xml:lang="en-us">
  <title>DTD: Coding requirements for attribute domain modules</title>
  <!--<shortdesc>An attribute domain vocabulary module declares a new attribute specialized from either the <xmlatt>props</xmlatt> or <xmlatt>base</xmlatt> attribute. An attribute domain module defines exactly one new attribute type.</shortdesc>-->
  <shortdesc>The vocabulary modules that define attribute domains have additional coding
    requirements. The module must include a parameter entity for the new attribute, which can be
    referenced in document-type
    shells<?oxy_insert_start author="chris" timestamp="20200705T175634-0400"?> or
    mix-ins<?oxy_insert_end?>, as well as a text entity that specifies the contribution to the
      <xmlatt>specializations</xmlatt> attribute for the attribute domain.</shortdesc>
  <conbody>
    <p conkeyref="reuse-general/dtd-attribute-domain-name"/>
    <dl>
      <dlentry>
        <dt>Parameter entity name and value</dt>
        <dd>The name of the parameter entity is the attribute domain name, followed by the literal
            <codeph>-d-attribute</codeph>.
          <?oxy_insert_start author="chris" timestamp="20200705T175732-0400"?>Attributes meant for
          use in mix-ins must also carry the suffix <codeph>-mixin</codeph>. <?oxy_insert_end?>The
          value of the parameter entity is a DTD declaration for the attribute.</dd>
      </dlentry>
      <dlentry>
        <dt>Text entity name and value</dt>
        <dd>The text entity name is the attribute domain name, followed by the literal
            <codeph>-d-Att</codeph>. The value of the text entity is the
            <xmlatt>specializations</xmlatt> attribute contribution for the module; see <xref
            href="specialization-specializations-attribute.dita"/> for details on how to construct
          this value. </dd>
      </dlentry>
      <?oxy_insert_start author="chris" timestamp="20200705T182211-0400"?>
      <dlentry>
        <dt>Attribute list integration (mix-ins only, optional)</dt>
        <dd>Attribute domains meant for use as mix-ins <keyword outputclass="RFC-2119">MAY</keyword>
          include attribute lists adding the attribute to its applicable elements. The module may
          also leave specific element integrations to separate content model specialization
          modules.</dd>
      </dlentry>
      <?oxy_insert_end?>
    </dl>
    <example id="example" otherprops="examples">
      <title><?oxy_delete author="chris" timestamp="20200705T182442-0400" content="Example"?><?oxy_insert_start author="chris" timestamp="20200705T182442-0400"?>Global
          <xmlatt>deliveryTarget</xmlatt> attribute<?oxy_insert_end?></title>
      <p>The <xmlatt>deliveryTarget</xmlatt> attribute can be defined in a vocabulary module using
        the following two entities.</p>
      <codeblock>&lt;!ENTITY % deliveryTargetAtt-d-attribute
  "deliveryTarget  CDATA  #IMPLIED"
&gt;

&lt;!ENTITY deliveryTargetAtt-d-att "@props/deliveryTarget" ></codeblock>
    </example>
    <?oxy_insert_start author="chris" timestamp="20200705T182452-0400"?>
    <example>
      <title>Adding <xmlatt>cellPurpose</xmlatt> to table elements</title>
      <p>Consider a fictional attribute domain declaring a specialization of <xmlatt>props</xmlatt>
        called <xmlatt>cellPurpose</xmlatt> intended for use only on the
          <xmlelement>entry</xmlelement>, <xmlelement>row</xmlelement>, and
          <xmlelement>colspec</xmlelement> elements. This can be defined using the following
        entities and attribute lists.</p>
      <codeblock>&lt;!ENTITY % cellPurpose-d-attribute-mixin
  "cellPurpose CDATA #IMPLIED"
>

&lt;!ENTITY % cellPurpose-d-att "@props/cellPurpose">

&lt;!ATTLIST entry %cellPurpose-d-attribute-mixin;>
&lt;!ATTLIST row %cellPurpose-d-attribute-mixin;>
&lt;!ATTLIST colspec %cellPurpose-d-attribute-mixin;></codeblock>
    </example>
    <?oxy_insert_end?>
  </conbody>
</concept>

<?oxy_options track_changes="on"?>