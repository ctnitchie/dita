<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept
  id="domainpattern"
  xml:lang="en-us">
  <title>DTD: Coding requirements for element domain modules</title>
  <shortdesc>The vocabulary modules that define element domains have an additional coding
    requirement. The entity declaration file must include a parameter entity for each element that
    the domain extends.</shortdesc>
  <conbody>
    <dl>
      <dlentry>
        <dt>Parameter entity name</dt>
        <dd>
          <p>The name of the parameter entity is the abbreviation for the domain, followed by a
            hyphen ("-"), and the name of the element that is
            extended.<?oxy_insert_start author="chris" timestamp="20200705T174055-0400"?> For
            domains intended for use with mix-in modules, the entity name must also carry the suffix
              <codeph>-mixin</codeph>.<?oxy_insert_end?></p>
        </dd>
      </dlentry>
      <dlentry>
        <dt>Parameter entity value</dt>
        <dd>
          <p>The value of the parameter entity is a list of the specialized elements that can occur
            in the same locations as the extended element. Each element must be separated by the
            vertical line ( | ) symbol.</p>
        </dd>
      </dlentry>
    </dl>
    <example id="example" otherprops="examples">
      <title><?oxy_delete author="chris" timestamp="20200705T174129-0400" content="Example"?><?oxy_insert_start author="chris" timestamp="20200705T174129-0400"?>Global
        element domain<?oxy_insert_end?></title>
      <p otherprops="examples">Because the highlighting domain extends the
          <xmlelement>ph</xmlelement> element, the entity declaration file for that domain must
        include a parameter entity corresponding to the <xmlelement>ph</xmlelement> element. The
        name of the entity uses the short name of the domain (<codeph>hi-d</codeph>) followed by the
        name of the base element. The value includes each specialization of
          <xmlelement>ph</xmlelement> in the domain.</p>
      <codeblock>&lt;!ENTITY % hi-d-ph "b | u | i | <ph>line-through | overline |</ph> tt | sup | sub"></codeblock>
    </example>
    <?oxy_insert_start author="chris" timestamp="20200705T174137-0400"?>
    <example>
      <title>Mix-in element domain</title>
      <p>A content architect wishes to add a specialization of <xmlelement>p</xmlelement> called
          <xmlelement>extendedDetails</xmlelement> and make it available only to certain elements,
        not globally. The entity file for this specialization must still declare an entity listing
        the specialization of <xmlelement>p</xmlelement>, but in this case the name of the entity is
        the name of the domain (<codeph>extendedDetails-d</codeph>), follwed by the name of the base
        element, followed by <codeph>-mixin</codeph>.</p>
      <codeblock>&lt;!ENTITY % extendedDetails-d-p-mixin "extendedDetails"></codeblock>
    </example>
    <?oxy_insert_end?>
  </conbody>
</concept>
<?oxy_options track_changes="on"?>